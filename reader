#! /usr/bin/bash

# PojavLauncher Log Reader: Renewed
# What's new in version 3.0.0:
# A full reimplementation of the log reader (the old 2.1.1 was gone because my phone go brrr)
# Incredibly fast (around 60% faster)

main() {
	case $1 in
		-h | --help)
		welcome
		;&
		-v | --version)
		version
		;&
		*)
		reader $1
		;&
	esac
}

welcome() {
	echo "The Ultimate Duyism Log Reader: Renewed"
	echo "Usage: $0 [OPTIONS] FILENAME"
	echo "Available options:"
	echo "-h or --help			Print this message"
	echo "-v or --version 			Print the version"
}

version() {
	echo "Version: 3.0.0-dev.2"
	echo "Timestamp: 2022-07-03 6:17 PM UTC+7"
}

reader() {
	if [[ !(-r $1) ]]; then
		echo "ERROR: The log file does not exist or is unreadable."
	else
		preprocess $1
	fi
}

preprocess() {
	# Prepare for everything
	egrep -m 1 -n -o "Loading Minecraft .* with .* Loader .*" $1 > ./.temp4 &
	egrep -m 1 -o "Forge Mod Loader version .* for Minecraft .* loading" $1 > ./.temp5 &
	egrep -m 1 -o "Forge mod loading, version .*, for MC .* with MCP .*" $1 > ./.temp6 &
	egrep -m 1 -o "OptiFine_.*_HD_U_.*" $1 > ./.temp10 &
	sed -n 4p $1 | cut -d ' ' -f2 | egrep 'arm64|x86_64|arm|x86' > ./.temp11 &
	# Should we preprocess without context?
	# It might introduce some unwanted overhead.
	egrep -m 1 -o "POJAV_RENDERER=.*" $1 | cut -d '=' -f2 > ./.temp13 &
	wait
	platform_check $1
}

platform_check() {
	if [ ! -z "$(< ./.temp11)" ]; then
		platform=Android
		echo "Platform: Android, $(< ./.temp11)"
		sed -n 2p $1 | cut -d ' ' -f4 > ./.temp12
		echo "Launcher version: $(< ./.temp12)"
		echo "Renderer: $(< ./.temp13)"
	else
		sed -n 1p $1 > ./.temp14
		cut -d ' ' -f5 ./.temp14 > ./.temp1
		cut -d ' ' -f7 ./.temp14 > ./.temp2 &
		cut -d ' ' -f8 ./.temp14 > ./.temp3 &
		if [ -r ./ios_devices.txt ]; then
			device=$(grep -m 1 $(< ./.temp1) ./ios_devices.txt | cut -d ':' -f2)
			echo "Device:$device"
		else
			echo "Device: $(< ./.temp1)"
		fi &
		wait
		echo "Platform: $(< ./.temp2), version $(< ./.temp3), arm64"
	fi
	mc_version $1 $platform
}

mc_version() {
	if [ "$2" == "Android" ]; then
		mcv=$(sed -n "6p" $1 | cut -d ' ' -f 5-)
	else
		mcv=$(egrep -m 1 -o "Launching Minecraft .*" $1 | cut -d ' ' -f3)
	fi
	echo "Minecraft version: $mcv"
	optifine $1
}

optifine() {
	if [ ! -z "$(< ./.temp10)" ]; then
		echo "OptiFine version $(< ./.temp10)"
	fi
	modloader $1
}

modloader() {
	if [ ! -z "$(< ./.temp4)" ]; then
		cut -d ' ' -f3 ./.temp4 > ./.temp7 &
		cut -d ' ' -f5 ./.temp4 > ./.temp8 &
		cut -d ' ' -f7 ./.temp4 > ./.temp9 &
		line=$(cut -d ':' -f1 ./.temp4)
		mod=$(sed -n "$((line+1))p" $1 | egrep -o "Loading .* mods" | cut -d ' ' -f2)
		wait
		echo "Mod Loader: $(< ./.temp7), version $(< ./.temp8) for Minecraft $(< ./.temp9)"
		if [ -z $mod ]; then
			echo "Mod count: $mod"
		fi
	fi &
#	TODO: Adapt this to older versions (... Minecraft client: 1.3.2, server: 1.3.2 loading)
	if [ ! -z "$(< ./.temp5)" ]; then
		cut -d ' ' -f5 ./.temp5 > ./.temp7 &
		cut -d ' ' -f8 ./.temp5 > ./.temp8 &
		egrep -m 1 -o "Forge Mod Loader has successfully loaded .* mods" $1 | cut -d ' ' -f7 > ./.temp9 &
		wait
		echo "Mod Loader: Forge, version $(< ./.temp7) for Minecraft $(< ./.temp8)"
		if [ $(< ./.temp9) -gt 0 ]; then
			echo "Mod count: $(< ./.temp9)"
		fi
	fi &
#	Forge, but for 1.13+
#	The Mod Launcher don't give us the mod count. Attempting to do it is a waste of time.
	if [ ! -z "$(< ./.temp6)" ]; then
		cut -d ' ' -f5 ./.temp6 | cut -d ',' -f1 > ./.temp7 &
		cut -d ' ' -f8 ./.temp6 > ./.temp8 &
		wait
		echo "Mod Loader: Forge, version $(< ./.temp7) for Minecraft $(< ./.temp8)"
	fi &
	wait
#	TODO: Add more mod loaders
}

main $@

